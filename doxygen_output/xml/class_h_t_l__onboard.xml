<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_h_t_l__onboard" kind="class" language="C++" prot="public">
    <compoundname>HTL_onboard</compoundname>
    <includes refid="_h_t_l__onboard_8h" local="no">HTL_onboard.h</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_h_t_l__onboard_1a68199b02e0fe15d97fa95863aab6c03c" prot="private" static="no" mutable="no">
        <type>const uint8_t</type>
        <definition>const uint8_t HTL_onboard::pinMapping[10]</definition>
        <argsstring>[10]</argsstring>
        <name>pinMapping</name>
        <qualifiedname>HTL_onboard::pinMapping</qualifiedname>
        <initializer>= {0, 1, 2, 3, 4, 5, 6, 8, 7, 9}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="HTL_onboard.h" line="360" column="19" bodyfile="HTL_onboard.h" bodystart="360" bodyend="360"/>
      </memberdef>
      <memberdef kind="variable" id="class_h_t_l__onboard_1a64a567b71d98224394d15cb6d3d8b483" prot="private" static="no" mutable="no">
        <type>const uint8_t</type>
        <definition>const uint8_t HTL_onboard::pinMappingStripe[10]</definition>
        <argsstring>[10]</argsstring>
        <name>pinMappingStripe</name>
        <qualifiedname>HTL_onboard::pinMappingStripe</qualifiedname>
        <initializer>= {0, 1, 2, 3, 4, 5, 6, 7, 8, 9}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="HTL_onboard.h" line="361" column="19" bodyfile="HTL_onboard.h" bodystart="361" bodyend="361"/>
      </memberdef>
      <memberdef kind="variable" id="class_h_t_l__onboard_1a86a7b00431fbdbc7c453a775056b737b" prot="private" static="no" mutable="no">
        <type>const uint8_t</type>
        <definition>const uint8_t HTL_onboard::selectPins[3]</definition>
        <argsstring>[3]</argsstring>
        <name>selectPins</name>
        <qualifiedname>HTL_onboard::selectPins</qualifiedname>
        <initializer>= {10, 11, 12}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="HTL_onboard.h" line="362" column="19" bodyfile="HTL_onboard.h" bodystart="362" bodyend="362"/>
      </memberdef>
      <memberdef kind="variable" id="class_h_t_l__onboard_1a6fb0d5e2a768bd34d8259aaee2e00e9e" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int HTL_onboard::switch1Threshold</definition>
        <argsstring></argsstring>
        <name>switch1Threshold</name>
        <qualifiedname>HTL_onboard::switch1Threshold</qualifiedname>
        <initializer>= 700</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="HTL_onboard.h" line="365" column="9" bodyfile="HTL_onboard.h" bodystart="365" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_h_t_l__onboard_1a1efb7051be5d15f3dc12f09ffccfe579" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int HTL_onboard::switchNoneThreshold</definition>
        <argsstring></argsstring>
        <name>switchNoneThreshold</name>
        <qualifiedname>HTL_onboard::switchNoneThreshold</qualifiedname>
        <initializer>= 900</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="HTL_onboard.h" line="366" column="9" bodyfile="HTL_onboard.h" bodystart="366" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_h_t_l__onboard_1a5fbadc004a42cb30c8d415d647d9948b" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int HTL_onboard::switch12Threshold</definition>
        <argsstring></argsstring>
        <name>switch12Threshold</name>
        <qualifiedname>HTL_onboard::switch12Threshold</qualifiedname>
        <initializer>= 500</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="HTL_onboard.h" line="367" column="9" bodyfile="HTL_onboard.h" bodystart="367" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_h_t_l__onboard_1a70c7dd9c37fccbcd3c270c0538a552d3" prot="private" static="no" mutable="no">
        <type>unsigned long</type>
        <definition>unsigned long HTL_onboard::lastMultiplexTime</definition>
        <argsstring></argsstring>
        <name>lastMultiplexTime</name>
        <qualifiedname>HTL_onboard::lastMultiplexTime</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="HTL_onboard.h" line="369" column="19" bodyfile="HTL_onboard.h" bodystart="369" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_h_t_l__onboard_1a97c2bfd663357cde5d5270ae188e2c52" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int HTL_onboard::currentMode</definition>
        <argsstring></argsstring>
        <name>currentMode</name>
        <qualifiedname>HTL_onboard::currentMode</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="HTL_onboard.h" line="370" column="9" bodyfile="HTL_onboard.h" bodystart="370" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_h_t_l__onboard_1ad85d0bd600b454a7ff319d68ad6b448f" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool HTL_onboard::modesActive[3]</definition>
        <argsstring>[3]</argsstring>
        <name>modesActive</name>
        <qualifiedname>HTL_onboard::modesActive</qualifiedname>
        <initializer>= {false, false, false}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="HTL_onboard.h" line="371" column="10" bodyfile="HTL_onboard.h" bodystart="371" bodyend="371"/>
      </memberdef>
      <memberdef kind="variable" id="class_h_t_l__onboard_1a280255be7ea83c5b2d5721effad48e02" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int HTL_onboard::multiplexInterval</definition>
        <argsstring></argsstring>
        <name>multiplexInterval</name>
        <qualifiedname>HTL_onboard::multiplexInterval</qualifiedname>
        <initializer>= 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="HTL_onboard.h" line="372" column="9" bodyfile="HTL_onboard.h" bodystart="372" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_h_t_l__onboard_1aede42993c62e4c5143d933baf803c898" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int HTL_onboard::HEX_mode</definition>
        <argsstring></argsstring>
        <name>HEX_mode</name>
        <qualifiedname>HTL_onboard::HEX_mode</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="HTL_onboard.h" line="374" column="9" bodyfile="HTL_onboard.h" bodystart="374" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_h_t_l__onboard_1a869ae313d0b4854b004f6170aafdcd23" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int HTL_onboard::hexNumber</definition>
        <argsstring></argsstring>
        <name>hexNumber</name>
        <qualifiedname>HTL_onboard::hexNumber</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="HTL_onboard.h" line="375" column="9" bodyfile="HTL_onboard.h" bodystart="375" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_h_t_l__onboard_1af3db78f0af024a3053cca220bcb684c8" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int HTL_onboard::stripeMode</definition>
        <argsstring></argsstring>
        <name>stripeMode</name>
        <qualifiedname>HTL_onboard::stripeMode</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="HTL_onboard.h" line="376" column="9" bodyfile="HTL_onboard.h" bodystart="376" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_h_t_l__onboard_1afb792836373b20e12f35ab0750e16a74" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int HTL_onboard::ledStripeValue</definition>
        <argsstring></argsstring>
        <name>ledStripeValue</name>
        <qualifiedname>HTL_onboard::ledStripeValue</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="HTL_onboard.h" line="377" column="9" bodyfile="HTL_onboard.h" bodystart="377" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_h_t_l__onboard_1a749bd2948784c4896df593c8789efe78" prot="private" static="no" mutable="no">
        <type>String</type>
        <definition>String HTL_onboard::str</definition>
        <argsstring></argsstring>
        <name>str</name>
        <qualifiedname>HTL_onboard::str</qualifiedname>
        <initializer>= &quot;&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="HTL_onboard.h" line="378" column="12" bodyfile="HTL_onboard.h" bodystart="378" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_h_t_l__onboard_1aacf4e0458c82ebfb06ecb6ad0ec458cf" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int HTL_onboard::strDelay</definition>
        <argsstring></argsstring>
        <name>strDelay</name>
        <qualifiedname>HTL_onboard::strDelay</qualifiedname>
        <initializer>= 500</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="HTL_onboard.h" line="379" column="9" bodyfile="HTL_onboard.h" bodystart="379" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_h_t_l__onboard_1ab1bcdaff337f622a59eb2b206a2b1685" prot="private" static="no" mutable="no">
        <type>unsigned long</type>
        <definition>unsigned long HTL_onboard::lastStringUpdateTime</definition>
        <argsstring></argsstring>
        <name>lastStringUpdateTime</name>
        <qualifiedname>HTL_onboard::lastStringUpdateTime</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="HTL_onboard.h" line="380" column="19" bodyfile="HTL_onboard.h" bodystart="380" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_h_t_l__onboard_1aae9d6cf49d45c3a0d79156640e028308" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int HTL_onboard::strInx</definition>
        <argsstring></argsstring>
        <name>strInx</name>
        <qualifiedname>HTL_onboard::strInx</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="HTL_onboard.h" line="381" column="9" bodyfile="HTL_onboard.h" bodystart="381" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_h_t_l__onboard_1a684c34b3a692aa859f4524205480cd38" prot="private" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t HTL_onboard::red</definition>
        <argsstring></argsstring>
        <name>red</name>
        <qualifiedname>HTL_onboard::red</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="HTL_onboard.h" line="382" column="13" bodyfile="HTL_onboard.h" bodystart="382" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_h_t_l__onboard_1a090ef4f0b60cb5f13e3990041b641776" prot="private" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t HTL_onboard::green</definition>
        <argsstring></argsstring>
        <name>green</name>
        <qualifiedname>HTL_onboard::green</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="HTL_onboard.h" line="382" column="18" bodyfile="HTL_onboard.h" bodystart="382" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_h_t_l__onboard_1a1ccc76f1e226e912ed298b09b99fecad" prot="private" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t HTL_onboard::blue</definition>
        <argsstring></argsstring>
        <name>blue</name>
        <qualifiedname>HTL_onboard::blue</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="HTL_onboard.h" line="382" column="25" bodyfile="HTL_onboard.h" bodystart="382" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_h_t_l__onboard_1acfb60693f7cc38782cc6ac969de4ea85" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>HTL_onboard::HTL_onboard</definition>
        <argsstring>()</argsstring>
        <name>HTL_onboard</name>
        <qualifiedname>HTL_onboard::HTL_onboard</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="HTL_onboard.h" line="70" column="5"/>
      </memberdef>
      <memberdef kind="function" id="class_h_t_l__onboard_1a88b65377c0c8397e6ae17e9ffee5fe56" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void HTL_onboard::begin</definition>
        <argsstring>()</argsstring>
        <name>begin</name>
        <qualifiedname>HTL_onboard::begin</qualifiedname>
        <briefdescription>
<para>Initializes the <ref refid="class_h_t_l__onboard" kindref="compound">HTL_onboard</ref> library. </para>
        </briefdescription>
        <detaileddescription>
<para>Sets up pin modes for all necessary pins. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="HTL_onboard.h" line="77" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_h_t_l__onboard_1a760e3496a5578922539d6562d438c75c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void HTL_onboard::writeHex</definition>
        <argsstring>(int8_t hexNumber)</argsstring>
        <name>writeHex</name>
        <qualifiedname>HTL_onboard::writeHex</qualifiedname>
        <param>
          <type>int8_t</type>
          <declname>hexNumber</declname>
        </param>
        <briefdescription>
<para>Writes a hexadecimal number to the HEX display. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>hexNumber</parametername>
</parameternamelist>
<parameterdescription>
<para>The hexadecimal number to display (-15 to 15). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="HTL_onboard.h" line="84" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_h_t_l__onboard_1aef763b81deebbb77ee39971e95890cdc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void HTL_onboard::writeInt</definition>
        <argsstring>(int8_t intNumber)</argsstring>
        <name>writeInt</name>
        <qualifiedname>HTL_onboard::writeInt</qualifiedname>
        <param>
          <type>int8_t</type>
          <declname>intNumber</declname>
        </param>
        <briefdescription>
<para>Writes an integer to the HEX display. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>intNumber</parametername>
</parameternamelist>
<parameterdescription>
<para>The integer number to display (-19 to 19). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="HTL_onboard.h" line="91" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_h_t_l__onboard_1a5991aca1e6a6a3874c8f3754d23602e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void HTL_onboard::writeChar</definition>
        <argsstring>(char c)</argsstring>
        <name>writeChar</name>
        <qualifiedname>HTL_onboard::writeChar</qualifiedname>
        <param>
          <type>char</type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Display a character on the 7-segment display. </para>
        </briefdescription>
        <detaileddescription>
<para>Displaying characters is supported in Multiplex mode</para>
<para>This function attempts to display the provided character on the 7-segment display. If the character is not directly supported, it will attempt to display the uppercase or lowercase equivalent. If the character is still unsupported, it defaults to displaying &apos;0&apos;.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>c</parametername>
</parameternamelist>
<parameterdescription>
<para>The character to display. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="HTL_onboard.h" line="105" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_h_t_l__onboard_1ab36757db8db11f45b0d1ac46010c0131" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void HTL_onboard::writeBinary</definition>
        <argsstring>(int binValue)</argsstring>
        <name>writeBinary</name>
        <qualifiedname>HTL_onboard::writeBinary</qualifiedname>
        <param>
          <type>int</type>
          <declname>binValue</declname>
        </param>
        <briefdescription>
<para>Writes a binary value to the LED stripe. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>binValue</parametername>
</parameternamelist>
<parameterdescription>
<para>The binary value to display (0 to 1023). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="HTL_onboard.h" line="112" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_h_t_l__onboard_1a5d95b23faac0ee94e05b481e826dcf9b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void HTL_onboard::writeProgress</definition>
        <argsstring>(int progressValue)</argsstring>
        <name>writeProgress</name>
        <qualifiedname>HTL_onboard::writeProgress</qualifiedname>
        <param>
          <type>int</type>
          <declname>progressValue</declname>
        </param>
        <briefdescription>
<para>Writes a value to the LED stripe in Progress Bar form. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>progressValue</parametername>
</parameternamelist>
<parameterdescription>
<para>The progress value to display (0 to 10). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="HTL_onboard.h" line="119" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_h_t_l__onboard_1a9276d2f25e4f9ad5ad1d10f24f2ee250" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void HTL_onboard::setLED</definition>
        <argsstring>(int pin)</argsstring>
        <name>setLED</name>
        <qualifiedname>HTL_onboard::setLED</qualifiedname>
        <param>
          <type>int</type>
          <declname>pin</declname>
        </param>
        <briefdescription>
<para>Sets a specific LED on the LED stripe. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pin</parametername>
</parameternamelist>
<parameterdescription>
<para>The pin number of the LED to set (0 to 9). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="HTL_onboard.h" line="126" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_h_t_l__onboard_1a560a8bfd0817f05267f75992ecbefa4e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void HTL_onboard::clearLED</definition>
        <argsstring>(int pin)</argsstring>
        <name>clearLED</name>
        <qualifiedname>HTL_onboard::clearLED</qualifiedname>
        <param>
          <type>int</type>
          <declname>pin</declname>
        </param>
        <briefdescription>
<para>Clears a specific LED on the LED stripe. </para>
        </briefdescription>
        <detaileddescription>
<para>This function turns off the specified LED on the LED stripe by setting its corresponding pin to HIGH.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pin</parametername>
</parameternamelist>
<parameterdescription>
<para>The pin number of the LED to clear (0 to 9). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="HTL_onboard.h" line="135" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_h_t_l__onboard_1a8d4b65a949203de0866e64581cd20bc2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void HTL_onboard::clearStripe</definition>
        <argsstring>()</argsstring>
        <name>clearStripe</name>
        <qualifiedname>HTL_onboard::clearStripe</qualifiedname>
        <briefdescription>
<para>Clears all LEDs on the LED stripe (turns them off). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="HTL_onboard.h" line="140" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_h_t_l__onboard_1a4e6e62af7dba27982561b371b925a45f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void HTL_onboard::setRGB</definition>
        <argsstring>(uint8_t red, uint8_t green, uint8_t blue)</argsstring>
        <name>setRGB</name>
        <qualifiedname>HTL_onboard::setRGB</qualifiedname>
        <param>
          <type>uint8_t</type>
          <declname>red</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>green</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>blue</declname>
        </param>
        <briefdescription>
<para>Sets the RGB LED to the specified color. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>red</parametername>
</parameternamelist>
<parameterdescription>
<para>The red intensity (0 to 255). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>green</parametername>
</parameternamelist>
<parameterdescription>
<para>The green intensity (0 to 255). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>blue</parametername>
</parameternamelist>
<parameterdescription>
<para>The blue intensity (0 to 255). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="HTL_onboard.h" line="149" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_h_t_l__onboard_1aa0bcdb1c70e2778f1062036ec3966a28" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int HTL_onboard::readSwitchState</definition>
        <argsstring>()</argsstring>
        <name>readSwitchState</name>
        <qualifiedname>HTL_onboard::readSwitchState</qualifiedname>
        <briefdescription>
<para>Reads the state of the switches. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>int Returns 2 if switch 2 is pressed, 3 if switch 3 is pressed, 1 if both switches are pressed, and 0 if no switch is pressed. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="HTL_onboard.h" line="156" column="9"/>
      </memberdef>
      <memberdef kind="function" id="class_h_t_l__onboard_1ad1c187bdc31df05c05737ea252a898ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int HTL_onboard::readPot</definition>
        <argsstring>()</argsstring>
        <name>readPot</name>
        <qualifiedname>HTL_onboard::readPot</qualifiedname>
        <briefdescription>
<para>Reads the potentiometer value. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>int The analog value from the potentiometer (0-1023). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="HTL_onboard.h" line="163" column="9"/>
      </memberdef>
      <memberdef kind="function" id="class_h_t_l__onboard_1aabdafebf0cb27635a1807e4e757e9131" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void HTL_onboard::setMode</definition>
        <argsstring>(int mode, bool state)</argsstring>
        <name>setMode</name>
        <qualifiedname>HTL_onboard::setMode</qualifiedname>
        <param>
          <type>int</type>
          <declname>mode</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>state</declname>
        </param>
        <briefdescription>
<para>Sets the mode of the <ref refid="class_h_t_l__onboard" kindref="compound">HTL_onboard</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mode</parametername>
</parameternamelist>
<parameterdescription>
<para>The mode to set (0 for HEX, 1 for LED stripe, 2 for RGB). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>state</parametername>
</parameternamelist>
<parameterdescription>
<para>The state to set the mode to (true for active, false for inactive). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="HTL_onboard.h" line="171" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_h_t_l__onboard_1a8c34691461b7d44c23769bcd289f491d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void HTL_onboard::cfgSwitches</definition>
        <argsstring>(int switch1Threshold, int switchNoneThreshold, int switch12Threshold)</argsstring>
        <name>cfgSwitches</name>
        <qualifiedname>HTL_onboard::cfgSwitches</qualifiedname>
        <param>
          <type>int</type>
          <declname>switch1Threshold</declname>
        </param>
        <param>
          <type>int</type>
          <declname>switchNoneThreshold</declname>
        </param>
        <param>
          <type>int</type>
          <declname>switch12Threshold</declname>
        </param>
        <briefdescription>
<para>Configures the switch thresholds. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>switch1Threshold</parametername>
</parameternamelist>
<parameterdescription>
<para>Threshold for switch 1. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>switchNoneThreshold</parametername>
</parameternamelist>
<parameterdescription>
<para>Threshold for no switch pressed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>switch12Threshold</parametername>
</parameternamelist>
<parameterdescription>
<para>Threshold for both switches pressed. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="HTL_onboard.h" line="180" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_h_t_l__onboard_1a00851f4921202d3fbe3af7f626895bc3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void HTL_onboard::updateMultiplex</definition>
        <argsstring>()</argsstring>
        <name>updateMultiplex</name>
        <qualifiedname>HTL_onboard::updateMultiplex</qualifiedname>
        <briefdescription>
<para>Updates all displays. Call this function in loop() </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="HTL_onboard.h" line="185" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_h_t_l__onboard_1a8bd4ad5557eeb776f07b2e8ac317d090" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void HTL_onboard::setModesMultiplex</definition>
        <argsstring>(const int modes[], int size)</argsstring>
        <name>setModesMultiplex</name>
        <qualifiedname>HTL_onboard::setModesMultiplex</qualifiedname>
        <param>
          <type>const int</type>
          <declname>modes</declname>
          <array>[]</array>
        </param>
        <param>
          <type>int</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Sets the modes which are used to display in multiplex operation. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>modes</parametername>
</parameternamelist>
<parameterdescription>
<para>array of modes that are displayed in Multiplex mode. (0 for HEX, 1 for LED stripe, 2 for RGB) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="HTL_onboard.h" line="192" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_h_t_l__onboard_1a85475ddd8954e75e2180df34aef3930a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void HTL_onboard::setMultiplexInterval</definition>
        <argsstring>(int multiplexInterval)</argsstring>
        <name>setMultiplexInterval</name>
        <qualifiedname>HTL_onboard::setMultiplexInterval</qualifiedname>
        <param>
          <type>int</type>
          <declname>multiplexInterval</declname>
        </param>
        <briefdescription>
<para>Sets the interval for multiplexing between different display modes. </para>
        </briefdescription>
        <detaileddescription>
<para>This function sets the interval, in milliseconds, for how frequently the system cycles through the different active display modes (HEX, LED stripe, RGB). The provided interval must be non-negative.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>multiplexInterval</parametername>
</parameternamelist>
<parameterdescription>
<para>The time interval in milliseconds for multiplexing. Must be a non-negative integer. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="HTL_onboard.h" line="204" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_h_t_l__onboard_1ab53c4e846dd276af8f2574e49019c33a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void HTL_onboard::setHexMode</definition>
        <argsstring>(int mode)</argsstring>
        <name>setHexMode</name>
        <qualifiedname>HTL_onboard::setHexMode</qualifiedname>
        <param>
          <type>int</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
<para>Sets the display mode of the HEX display. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mode</parametername>
</parameternamelist>
<parameterdescription>
<para>The mode to set (0 for HEX, 1 for Decimal, 2 for Character). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="HTL_onboard.h" line="211" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_h_t_l__onboard_1a828ffc5c147a86fd4fba2993906b6d76" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int HTL_onboard::getHexMode</definition>
        <argsstring>()</argsstring>
        <name>getHexMode</name>
        <qualifiedname>HTL_onboard::getHexMode</qualifiedname>
        <briefdescription>
<para>Gets the current display mode of the HEX display. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>int The current display mode (0 for HEX, 1 for Decimal, 2 for Character, 3 for String). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="HTL_onboard.h" line="218" column="9"/>
      </memberdef>
      <memberdef kind="function" id="class_h_t_l__onboard_1a1f46384aac538ac904ec4a802c0ee8e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void HTL_onboard::setHexNumber</definition>
        <argsstring>(int number)</argsstring>
        <name>setHexNumber</name>
        <qualifiedname>HTL_onboard::setHexNumber</qualifiedname>
        <param>
          <type>int</type>
          <declname>number</declname>
        </param>
        <briefdescription>
<para>Sets the number to be displayed on the HEX display. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>number</parametername>
</parameternamelist>
<parameterdescription>
<para>The number to display (-15 to 15 in HEX mode, -19 to 19 in Decimal mode). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="HTL_onboard.h" line="225" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_h_t_l__onboard_1ac0354777962b814ffb003482b57ad354" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int HTL_onboard::getHexNumber</definition>
        <argsstring>()</argsstring>
        <name>getHexNumber</name>
        <qualifiedname>HTL_onboard::getHexNumber</qualifiedname>
        <briefdescription>
<para>Gets the number/character currently displayed on the HEX display. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>int The number/character displayed on the HEX display as int. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="HTL_onboard.h" line="232" column="9"/>
      </memberdef>
      <memberdef kind="function" id="class_h_t_l__onboard_1a07f4bc24e5bf4ed88bdea9956014c644" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void HTL_onboard::setChar</definition>
        <argsstring>(char c)</argsstring>
        <name>setChar</name>
        <qualifiedname>HTL_onboard::setChar</qualifiedname>
        <param>
          <type>char</type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Sets the character to be displayed on the HEX display. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>c</parametername>
</parameternamelist>
<parameterdescription>
<para>The character to display (ASCII). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="HTL_onboard.h" line="239" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_h_t_l__onboard_1a5f5f594fa2dca5da4f224bf3e007991b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void HTL_onboard::setString</definition>
        <argsstring>(String str)</argsstring>
        <name>setString</name>
        <qualifiedname>HTL_onboard::setString</qualifiedname>
        <param>
          <type>String</type>
          <declname>str</declname>
        </param>
        <briefdescription>
<para>Sets the string to be displayed on the HEX display. </para>
        </briefdescription>
        <detaileddescription>
<para>The string gets displayed character by character, with each character being displayed for strDelay (ms). Displaying strings is only supported for Multiplex mode, for Hex_mode only use setChar or only activate HEX mode</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>The string to display (ASCII). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="HTL_onboard.h" line="249" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_h_t_l__onboard_1ad4612fb21a6d2fc46431845cc5d52b6a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>String</type>
        <definition>String HTL_onboard::getString</definition>
        <argsstring>()</argsstring>
        <name>getString</name>
        <qualifiedname>HTL_onboard::getString</qualifiedname>
        <briefdescription>
<para>Gets the string to be displayed on the HEX display. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>String The string being displayed. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="HTL_onboard.h" line="256" column="12"/>
      </memberdef>
      <memberdef kind="function" id="class_h_t_l__onboard_1a108126141b3e086b705535c81f882c6c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void HTL_onboard::setStripeMode</definition>
        <argsstring>(int mode)</argsstring>
        <name>setStripeMode</name>
        <qualifiedname>HTL_onboard::setStripeMode</qualifiedname>
        <param>
          <type>int</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
<para>Sets the display mode of the LED Stripe. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mode</parametername>
</parameternamelist>
<parameterdescription>
<para>The mode to set (0 for Binary, 1 for Progress). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="HTL_onboard.h" line="263" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_h_t_l__onboard_1a4c1d2d884513f5ffbe562a961eaa08e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int HTL_onboard::getStripeMode</definition>
        <argsstring>()</argsstring>
        <name>getStripeMode</name>
        <qualifiedname>HTL_onboard::getStripeMode</qualifiedname>
        <briefdescription>
<para>Gets the current display mode of the LED Stripe. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>int The current display mode (0 for Binary, 1 for Progress). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="HTL_onboard.h" line="270" column="9"/>
      </memberdef>
      <memberdef kind="function" id="class_h_t_l__onboard_1a90774e322346143ae19a92abd3a6896f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void HTL_onboard::setRGB_Multiplex</definition>
        <argsstring>(uint8_t red, uint8_t green, uint8_t blue)</argsstring>
        <name>setRGB_Multiplex</name>
        <qualifiedname>HTL_onboard::setRGB_Multiplex</qualifiedname>
        <param>
          <type>uint8_t</type>
          <declname>red</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>green</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>blue</declname>
        </param>
        <briefdescription>
<para>Sets the RGB Values used in Multiplex Mode. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>red</parametername>
</parameternamelist>
<parameterdescription>
<para>The red intensity (0 to 255). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>green</parametername>
</parameternamelist>
<parameterdescription>
<para>The green intensity (0 to 255). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>blue</parametername>
</parameternamelist>
<parameterdescription>
<para>The blue intensity (0 to 255). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="HTL_onboard.h" line="280" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_h_t_l__onboard_1a1c247b0374b9498aff71143df3f59923" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void HTL_onboard::setRed</definition>
        <argsstring>(uint8_t r)</argsstring>
        <name>setRed</name>
        <qualifiedname>HTL_onboard::setRed</qualifiedname>
        <param>
          <type>uint8_t</type>
          <declname>r</declname>
        </param>
        <briefdescription>
<para>Sets the intensity of the red component of the RGB LED. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>r</parametername>
</parameternamelist>
<parameterdescription>
<para>The intensity of the red component (0 to 255). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="HTL_onboard.h" line="287" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_h_t_l__onboard_1ae128bbc974b8cc5a317fe611b58e398c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void HTL_onboard::setGreen</definition>
        <argsstring>(uint8_t g)</argsstring>
        <name>setGreen</name>
        <qualifiedname>HTL_onboard::setGreen</qualifiedname>
        <param>
          <type>uint8_t</type>
          <declname>g</declname>
        </param>
        <briefdescription>
<para>Sets the intensity of the green component of the RGB LED. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>g</parametername>
</parameternamelist>
<parameterdescription>
<para>The intensity of the green component (0 to 255). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="HTL_onboard.h" line="294" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_h_t_l__onboard_1aeb12cab35ff962863ce7ae8da18b0c14" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void HTL_onboard::setBlue</definition>
        <argsstring>(uint8_t b)</argsstring>
        <name>setBlue</name>
        <qualifiedname>HTL_onboard::setBlue</qualifiedname>
        <param>
          <type>uint8_t</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>Sets the intensity of the blue component of the RGB LED. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>b</parametername>
</parameternamelist>
<parameterdescription>
<para>The intensity of the blue component (0 to 255). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="HTL_onboard.h" line="301" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_h_t_l__onboard_1a32a71fc78a1ac5300f0e22d1479e6db3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t HTL_onboard::getRed</definition>
        <argsstring>()</argsstring>
        <name>getRed</name>
        <qualifiedname>HTL_onboard::getRed</qualifiedname>
        <briefdescription>
<para>Gets the intensity of the red component of the RGB LED. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>uint8_t The intensity of the red component (0 to 255). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="HTL_onboard.h" line="308" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_h_t_l__onboard_1a61e6e9b33f97f06620d6ec525d937b2f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t HTL_onboard::getGreen</definition>
        <argsstring>()</argsstring>
        <name>getGreen</name>
        <qualifiedname>HTL_onboard::getGreen</qualifiedname>
        <briefdescription>
<para>Gets the intensity of the green component of the RGB LED. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>uint8_t The intensity of the green component (0 to 255). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="HTL_onboard.h" line="315" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_h_t_l__onboard_1a686e4c128636d16d0a6d2e3d7c910c45" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t HTL_onboard::getBlue</definition>
        <argsstring>()</argsstring>
        <name>getBlue</name>
        <qualifiedname>HTL_onboard::getBlue</qualifiedname>
        <briefdescription>
<para>Gets the intensity of the blue component of the RGB LED. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>uint8_t The intensity of the blue component (0 to 255). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="HTL_onboard.h" line="322" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_h_t_l__onboard_1ac1aa66560483437aa0de1fc27d95f96c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void HTL_onboard::setStringDelay</definition>
        <argsstring>(int stringDelay)</argsstring>
        <name>setStringDelay</name>
        <qualifiedname>HTL_onboard::setStringDelay</qualifiedname>
        <param>
          <type>int</type>
          <declname>stringDelay</declname>
        </param>
        <briefdescription>
<para>Sets the delay of how long to display a character in string display mode. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ms</parametername>
</parameternamelist>
<parameterdescription>
<para>The delay in ms. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="HTL_onboard.h" line="329" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_h_t_l__onboard_1a21868924ca825c9b32bf90b09e71212b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int HTL_onboard::getStringDelay</definition>
        <argsstring>()</argsstring>
        <name>getStringDelay</name>
        <qualifiedname>HTL_onboard::getStringDelay</qualifiedname>
        <briefdescription>
<para>Gets the delay of how long to display a character in string display mode. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>int The delay in ms. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="HTL_onboard.h" line="336" column="9"/>
      </memberdef>
      <memberdef kind="function" id="class_h_t_l__onboard_1a01e1bbba54952a13ae17ca7b97c4c29c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void HTL_onboard::setLedStripeValue</definition>
        <argsstring>(int value)</argsstring>
        <name>setLedStripeValue</name>
        <qualifiedname>HTL_onboard::setLedStripeValue</qualifiedname>
        <param>
          <type>int</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Sets the value of the LED stripe. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value to set (0 to 1023). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="HTL_onboard.h" line="343" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_h_t_l__onboard_1a0e9e9dedf7312dbd9999685ad8edaefc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int HTL_onboard::getLedStripeValue</definition>
        <argsstring>()</argsstring>
        <name>getLedStripeValue</name>
        <qualifiedname>HTL_onboard::getLedStripeValue</qualifiedname>
        <briefdescription>
<para>Gets the current value of the LED stripe. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>int The current value of the LED stripe (0 to 1023). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="HTL_onboard.h" line="350" column="9"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="class_h_t_l__onboard_1ad3e88ecb93780a30f78afbd1cdc3c93e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void HTL_onboard::setPins</definition>
        <argsstring>(uint8_t value)</argsstring>
        <name>setPins</name>
        <qualifiedname>HTL_onboard::setPins</qualifiedname>
        <param>
          <type>uint8_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Sets the pins of the LED-Stripe based on the provided value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value to set the pins to. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="HTL_onboard.h" line="358" column="10"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Library for controlling onboard hardware components including HEX display, LED stripe, and RGB LED. </para>
    </briefdescription>
    <detaileddescription>
<para>This library provides functions to control various onboard hardware components of the HTL Uno, including a HEX display, LED stripe, and RGB LED. It allows for displaying hexadecimal and integer values on the HEX display, controlling individual LEDs on the LED stripe, setting colors on the RGB LED, reading switch states, and reading the value of a potentiometer.</para>
<para>Tobias Weich 2024 </para>
    </detaileddescription>
    <location file="HTL_onboard.h" line="68" column="1" bodyfile="HTL_onboard.h" bodystart="68" bodyend="383"/>
    <listofallmembers>
      <member refid="class_h_t_l__onboard_1a88b65377c0c8397e6ae17e9ffee5fe56" prot="public" virt="non-virtual"><scope>HTL_onboard</scope><name>begin</name></member>
      <member refid="class_h_t_l__onboard_1a1ccc76f1e226e912ed298b09b99fecad" prot="private" virt="non-virtual"><scope>HTL_onboard</scope><name>blue</name></member>
      <member refid="class_h_t_l__onboard_1a8c34691461b7d44c23769bcd289f491d" prot="public" virt="non-virtual"><scope>HTL_onboard</scope><name>cfgSwitches</name></member>
      <member refid="class_h_t_l__onboard_1a560a8bfd0817f05267f75992ecbefa4e" prot="public" virt="non-virtual"><scope>HTL_onboard</scope><name>clearLED</name></member>
      <member refid="class_h_t_l__onboard_1a8d4b65a949203de0866e64581cd20bc2" prot="public" virt="non-virtual"><scope>HTL_onboard</scope><name>clearStripe</name></member>
      <member refid="class_h_t_l__onboard_1a97c2bfd663357cde5d5270ae188e2c52" prot="private" virt="non-virtual"><scope>HTL_onboard</scope><name>currentMode</name></member>
      <member refid="class_h_t_l__onboard_1a686e4c128636d16d0a6d2e3d7c910c45" prot="public" virt="non-virtual"><scope>HTL_onboard</scope><name>getBlue</name></member>
      <member refid="class_h_t_l__onboard_1a61e6e9b33f97f06620d6ec525d937b2f" prot="public" virt="non-virtual"><scope>HTL_onboard</scope><name>getGreen</name></member>
      <member refid="class_h_t_l__onboard_1a828ffc5c147a86fd4fba2993906b6d76" prot="public" virt="non-virtual"><scope>HTL_onboard</scope><name>getHexMode</name></member>
      <member refid="class_h_t_l__onboard_1ac0354777962b814ffb003482b57ad354" prot="public" virt="non-virtual"><scope>HTL_onboard</scope><name>getHexNumber</name></member>
      <member refid="class_h_t_l__onboard_1a0e9e9dedf7312dbd9999685ad8edaefc" prot="public" virt="non-virtual"><scope>HTL_onboard</scope><name>getLedStripeValue</name></member>
      <member refid="class_h_t_l__onboard_1a32a71fc78a1ac5300f0e22d1479e6db3" prot="public" virt="non-virtual"><scope>HTL_onboard</scope><name>getRed</name></member>
      <member refid="class_h_t_l__onboard_1ad4612fb21a6d2fc46431845cc5d52b6a" prot="public" virt="non-virtual"><scope>HTL_onboard</scope><name>getString</name></member>
      <member refid="class_h_t_l__onboard_1a21868924ca825c9b32bf90b09e71212b" prot="public" virt="non-virtual"><scope>HTL_onboard</scope><name>getStringDelay</name></member>
      <member refid="class_h_t_l__onboard_1a4c1d2d884513f5ffbe562a961eaa08e1" prot="public" virt="non-virtual"><scope>HTL_onboard</scope><name>getStripeMode</name></member>
      <member refid="class_h_t_l__onboard_1a090ef4f0b60cb5f13e3990041b641776" prot="private" virt="non-virtual"><scope>HTL_onboard</scope><name>green</name></member>
      <member refid="class_h_t_l__onboard_1aede42993c62e4c5143d933baf803c898" prot="private" virt="non-virtual"><scope>HTL_onboard</scope><name>HEX_mode</name></member>
      <member refid="class_h_t_l__onboard_1a869ae313d0b4854b004f6170aafdcd23" prot="private" virt="non-virtual"><scope>HTL_onboard</scope><name>hexNumber</name></member>
      <member refid="class_h_t_l__onboard_1acfb60693f7cc38782cc6ac969de4ea85" prot="public" virt="non-virtual"><scope>HTL_onboard</scope><name>HTL_onboard</name></member>
      <member refid="class_h_t_l__onboard_1a70c7dd9c37fccbcd3c270c0538a552d3" prot="private" virt="non-virtual"><scope>HTL_onboard</scope><name>lastMultiplexTime</name></member>
      <member refid="class_h_t_l__onboard_1ab1bcdaff337f622a59eb2b206a2b1685" prot="private" virt="non-virtual"><scope>HTL_onboard</scope><name>lastStringUpdateTime</name></member>
      <member refid="class_h_t_l__onboard_1afb792836373b20e12f35ab0750e16a74" prot="private" virt="non-virtual"><scope>HTL_onboard</scope><name>ledStripeValue</name></member>
      <member refid="class_h_t_l__onboard_1ad85d0bd600b454a7ff319d68ad6b448f" prot="private" virt="non-virtual"><scope>HTL_onboard</scope><name>modesActive</name></member>
      <member refid="class_h_t_l__onboard_1a280255be7ea83c5b2d5721effad48e02" prot="private" virt="non-virtual"><scope>HTL_onboard</scope><name>multiplexInterval</name></member>
      <member refid="class_h_t_l__onboard_1a68199b02e0fe15d97fa95863aab6c03c" prot="private" virt="non-virtual"><scope>HTL_onboard</scope><name>pinMapping</name></member>
      <member refid="class_h_t_l__onboard_1a64a567b71d98224394d15cb6d3d8b483" prot="private" virt="non-virtual"><scope>HTL_onboard</scope><name>pinMappingStripe</name></member>
      <member refid="class_h_t_l__onboard_1ad1c187bdc31df05c05737ea252a898ae" prot="public" virt="non-virtual"><scope>HTL_onboard</scope><name>readPot</name></member>
      <member refid="class_h_t_l__onboard_1aa0bcdb1c70e2778f1062036ec3966a28" prot="public" virt="non-virtual"><scope>HTL_onboard</scope><name>readSwitchState</name></member>
      <member refid="class_h_t_l__onboard_1a684c34b3a692aa859f4524205480cd38" prot="private" virt="non-virtual"><scope>HTL_onboard</scope><name>red</name></member>
      <member refid="class_h_t_l__onboard_1a86a7b00431fbdbc7c453a775056b737b" prot="private" virt="non-virtual"><scope>HTL_onboard</scope><name>selectPins</name></member>
      <member refid="class_h_t_l__onboard_1aeb12cab35ff962863ce7ae8da18b0c14" prot="public" virt="non-virtual"><scope>HTL_onboard</scope><name>setBlue</name></member>
      <member refid="class_h_t_l__onboard_1a07f4bc24e5bf4ed88bdea9956014c644" prot="public" virt="non-virtual"><scope>HTL_onboard</scope><name>setChar</name></member>
      <member refid="class_h_t_l__onboard_1ae128bbc974b8cc5a317fe611b58e398c" prot="public" virt="non-virtual"><scope>HTL_onboard</scope><name>setGreen</name></member>
      <member refid="class_h_t_l__onboard_1ab53c4e846dd276af8f2574e49019c33a" prot="public" virt="non-virtual"><scope>HTL_onboard</scope><name>setHexMode</name></member>
      <member refid="class_h_t_l__onboard_1a1f46384aac538ac904ec4a802c0ee8e8" prot="public" virt="non-virtual"><scope>HTL_onboard</scope><name>setHexNumber</name></member>
      <member refid="class_h_t_l__onboard_1a9276d2f25e4f9ad5ad1d10f24f2ee250" prot="public" virt="non-virtual"><scope>HTL_onboard</scope><name>setLED</name></member>
      <member refid="class_h_t_l__onboard_1a01e1bbba54952a13ae17ca7b97c4c29c" prot="public" virt="non-virtual"><scope>HTL_onboard</scope><name>setLedStripeValue</name></member>
      <member refid="class_h_t_l__onboard_1aabdafebf0cb27635a1807e4e757e9131" prot="public" virt="non-virtual"><scope>HTL_onboard</scope><name>setMode</name></member>
      <member refid="class_h_t_l__onboard_1a8bd4ad5557eeb776f07b2e8ac317d090" prot="public" virt="non-virtual"><scope>HTL_onboard</scope><name>setModesMultiplex</name></member>
      <member refid="class_h_t_l__onboard_1a85475ddd8954e75e2180df34aef3930a" prot="public" virt="non-virtual"><scope>HTL_onboard</scope><name>setMultiplexInterval</name></member>
      <member refid="class_h_t_l__onboard_1ad3e88ecb93780a30f78afbd1cdc3c93e" prot="private" virt="non-virtual"><scope>HTL_onboard</scope><name>setPins</name></member>
      <member refid="class_h_t_l__onboard_1a1c247b0374b9498aff71143df3f59923" prot="public" virt="non-virtual"><scope>HTL_onboard</scope><name>setRed</name></member>
      <member refid="class_h_t_l__onboard_1a4e6e62af7dba27982561b371b925a45f" prot="public" virt="non-virtual"><scope>HTL_onboard</scope><name>setRGB</name></member>
      <member refid="class_h_t_l__onboard_1a90774e322346143ae19a92abd3a6896f" prot="public" virt="non-virtual"><scope>HTL_onboard</scope><name>setRGB_Multiplex</name></member>
      <member refid="class_h_t_l__onboard_1a5f5f594fa2dca5da4f224bf3e007991b" prot="public" virt="non-virtual"><scope>HTL_onboard</scope><name>setString</name></member>
      <member refid="class_h_t_l__onboard_1ac1aa66560483437aa0de1fc27d95f96c" prot="public" virt="non-virtual"><scope>HTL_onboard</scope><name>setStringDelay</name></member>
      <member refid="class_h_t_l__onboard_1a108126141b3e086b705535c81f882c6c" prot="public" virt="non-virtual"><scope>HTL_onboard</scope><name>setStripeMode</name></member>
      <member refid="class_h_t_l__onboard_1a749bd2948784c4896df593c8789efe78" prot="private" virt="non-virtual"><scope>HTL_onboard</scope><name>str</name></member>
      <member refid="class_h_t_l__onboard_1aacf4e0458c82ebfb06ecb6ad0ec458cf" prot="private" virt="non-virtual"><scope>HTL_onboard</scope><name>strDelay</name></member>
      <member refid="class_h_t_l__onboard_1aae9d6cf49d45c3a0d79156640e028308" prot="private" virt="non-virtual"><scope>HTL_onboard</scope><name>strInx</name></member>
      <member refid="class_h_t_l__onboard_1af3db78f0af024a3053cca220bcb684c8" prot="private" virt="non-virtual"><scope>HTL_onboard</scope><name>stripeMode</name></member>
      <member refid="class_h_t_l__onboard_1a5fbadc004a42cb30c8d415d647d9948b" prot="private" virt="non-virtual"><scope>HTL_onboard</scope><name>switch12Threshold</name></member>
      <member refid="class_h_t_l__onboard_1a6fb0d5e2a768bd34d8259aaee2e00e9e" prot="private" virt="non-virtual"><scope>HTL_onboard</scope><name>switch1Threshold</name></member>
      <member refid="class_h_t_l__onboard_1a1efb7051be5d15f3dc12f09ffccfe579" prot="private" virt="non-virtual"><scope>HTL_onboard</scope><name>switchNoneThreshold</name></member>
      <member refid="class_h_t_l__onboard_1a00851f4921202d3fbe3af7f626895bc3" prot="public" virt="non-virtual"><scope>HTL_onboard</scope><name>updateMultiplex</name></member>
      <member refid="class_h_t_l__onboard_1ab36757db8db11f45b0d1ac46010c0131" prot="public" virt="non-virtual"><scope>HTL_onboard</scope><name>writeBinary</name></member>
      <member refid="class_h_t_l__onboard_1a5991aca1e6a6a3874c8f3754d23602e2" prot="public" virt="non-virtual"><scope>HTL_onboard</scope><name>writeChar</name></member>
      <member refid="class_h_t_l__onboard_1a760e3496a5578922539d6562d438c75c" prot="public" virt="non-virtual"><scope>HTL_onboard</scope><name>writeHex</name></member>
      <member refid="class_h_t_l__onboard_1aef763b81deebbb77ee39971e95890cdc" prot="public" virt="non-virtual"><scope>HTL_onboard</scope><name>writeInt</name></member>
      <member refid="class_h_t_l__onboard_1a5d95b23faac0ee94e05b481e826dcf9b" prot="public" virt="non-virtual"><scope>HTL_onboard</scope><name>writeProgress</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
