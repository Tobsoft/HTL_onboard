import os
import subprocess
import sys
import shutil
from pathlib import Path

def generate_doxyfile(header_path: str, output_dir: str):
    doxyfile_content = f"""
# Doxygen configuration

PROJECT_NAME           = "AutoGeneratedDocs"
OUTPUT_DIRECTORY       = {output_dir}
INPUT                  = {header_path}
FILE_PATTERNS          = *.h
RECURSIVE              = NO
EXTRACT_ALL            = YES
GENERATE_XML           = YES
GENERATE_HTML          = YES
GENERATE_LATEX         = NO
QUIET                  = YES
"""
    doxyfile_path = Path(output_dir) / "Doxyfile"
    with open(doxyfile_path, "w") as f:
        f.write(doxyfile_content)
    return doxyfile_path

def run_doxygen(doxyfile_path: Path):
    print(f"▶️ Running Doxygen with {doxyfile_path}")
    subprocess.run(["doxygen", str(doxyfile_path)], check=True)

def run_doxybook2(xml_dir: str, markdown_dir: str):
    print(f"▶️ Running doxybook2: XML -> Markdown")
    subprocess.run(["doxybook2", "--input", xml_dir, "--output", markdown_dir], check=True)

def move_html_to_docs(html_dir: Path, docs_dir: Path):
    if docs_dir.exists():
        shutil.rmtree(docs_dir)
    shutil.copytree(html_dir, docs_dir)
    print(f"✅ Copied HTML docs to {docs_dir} (GitHub Pages ready)")

def main():
    if len(sys.argv) < 2:
        print("Usage: python generate_docs.py path/to/file.h")
        sys.exit(1)

    header_path = Path(sys.argv[1]).resolve()
    if not header_path.exists() or header_path.suffix != ".h":
        print("❌ Error: Provide a valid .h file.")
        sys.exit(1)

    base_dir = header_path.parent
    output_dir = base_dir / "doxygen_output"
    xml_dir = output_dir / "xml"
    html_dir = output_dir / "html"
    markdown_dir = base_dir / "markdown_docs"
    github_docs_dir = base_dir / "docs"

    os.makedirs(output_dir, exist_ok=True)
    os.makedirs(markdown_dir, exist_ok=True)

    doxyfile_path = generate_doxyfile(str(header_path), str(output_dir))
    run_doxygen(doxyfile_path)

    if (xml_dir / "index.xml").exists():
        try:
            run_doxybook2(str(xml_dir), str(markdown_dir))
            print(f"✅ Markdown docs generated in {markdown_dir}")
        except FileNotFoundError:
            print("⚠️ doxybook2 not found. Skipping Markdown generation.")
    else:
        print("❌ XML output not found. Doxygen may have failed.")

    if html_dir.exists():
        move_html_to_docs(html_dir, github_docs_dir)
    else:
        print("❌ HTML output not found. Cannot move to docs/.")

if __name__ == "__main__":
    main()
